* Use libcppa instead of multiple threads/eventhandler
	* One main messageserver (This will make it easy to switch to network based messages)
	* Client sends starting message and waits for reply with plotid
		* Every following message includes plotid, so that the messagesserver knows which backend should receive which message
		* Message always has first atom with id, second with type of action and rest
			variables needed for the action
		* xcb handler will also need to send messages to message server

* Make adaptive colormap
	* Basically ability to add data to colormap and it will keep track of max etc automatically
* Add benchmarks
	* Stress test, number of points handled per minute.
	* Frame rate (should be relatively constant?)
	* Benchmarks for each different plot
	* Try sysprof/oprofile?
* Play more with axes etc. Test axes output etc.
* Histogram and Histogram3D should also plot outside the axes, so move
	works properly
* Provide a combine method that easily allows you to combine one plot with another
	* Probably need to make plot surface transparent
* PDF backend
* Use a key to start (and stop) recording to a png file
* Allow multiple data sets in one histogram/histogram3d plot
* GTK backend?
